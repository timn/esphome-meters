esphome:
  name: "powermeter-house"
  friendly_name: Powermeter House
  includes:
    - holley_dtz541_sml.h
  platformio_options:
    build_unflags: -std=gnu++11
    build_flags:
      - "-std=gnu++17"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_powermeter_house

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

uart:
  id: uart_bus
  rx_pin: GPIO16
  tx_pin: GPIO17
  rx_buffer_size: 1024
  baud_rate: 9600
  data_bits: 8
  parity: NONE
  stop_bits: 1
  #debug:
  #  direction: BOTH
  #  dummy_receiver: false
  #  after:
  #    delimiter: "\n"
  #  sequence:
  #    - lambda: UARTDebug::log_hex(direction, bytes, ' ');

sensor:
  # Power Meter via SML, works for Holley DTZ541
  - platform: custom
    lambda: |-
      auto dtz541 = new HolleyDtz541SmlComponent(id(uart_bus));
      App.register_component(dtz541);
      return dtz541->GetSensors();

    # We leave this empty, our Component takes care of setting the
    # required settings and registering the sensor.
    sensors: []

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"

