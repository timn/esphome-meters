esphome:
  name: "powermeter-house-esp01"
  friendly_name: Powermeter House ESP01
  includes:
    - holley_dtz541_sml.h

esp8266:
  board: esp01_1m

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password

# Enable logging
logger:
  level: DEBUG
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_powermeter_house

# Note: the 1M flash is not sufficient for a full OTA upgrade (which would need
# to have enough room for two firmware images). This only works by flashing a
# minimal image and then the full image. You can create a minimal image by
# commenting out the "includes" part above and the sensors part below.
ota:
  password: !secret ota_password

uart:
  id: uart_bus
  rx_pin: GPIO3
  rx_buffer_size: 1024
  baud_rate: 9600
  data_bits: 8
  parity: NONE
  stop_bits: 1
  #debug:
  #  direction: BOTH
  #  dummy_receiver: false
  #  after:
  #    delimiter: "\n"
  #  sequence:
  #    - lambda: UARTDebug::log_hex(direction, bytes, ' ');

sensor:
  # Power Meter via SML, works for Holley DTZ541
  - platform: custom
    lambda: |-
      auto dtz541 = new HolleyDtz541SmlComponent(id(uart_bus));
      App.register_component(dtz541);
      return dtz541->GetSensors();

    # We leave this empty, our Component takes care of setting the
    # required settings and registering the sensor.
    sensors: []

